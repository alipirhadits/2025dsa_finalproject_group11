---
title: "Data Science Applied to Ag - Final Project - Design"
author: "Ali Pirhadi Tavandashti & Swabir Alhassan Musah"
format:
  html:
    code-fold: false
    embed-resources: true
    toc: true
    number-sections: true
    theme: cerulean
---

# Instructions  
This file contains both the **instructions** for the mid-term project and placeholders for your code. You are required to use this file to produce code, output, and answers to the questions below.  

Besides simply creating output, make sure to interpret the output. You will need to create tables and/or plots to arrive at the answers, and then comment on what you found below it.    

To get you setup, you will need to:  

  - Student #1: create a repository on your GitHub account. You can call this repository "2025dsa_finalproject_groupX", **where X is the number of your group**. Make it public, add a README, add a .gitignore for R.  
  - Student #1: follow the steps we did in class to start a new RStudio project with version control.  
  - Student #1: in your computer, create the sub-folders code, data, output, and move your data set into the `data` folder. Also, student 1 moves this current script into the `code` folder. Do a git stage, commit, push.  
  - Student #1: on GitHub, go the repository settings and invite your partner to be a collaborator in the repository. That will give them push permission.  
  - Now, both students should clone this repository on their computers like we did in class. Make sure this step works well and that you can pull and push from GitHub.  
  - Student 2, after cloning, does a git pull to get all these updates on their computer.  
  - Student 1 and 2 work together to update the README file. README files should explain what the repository is about, the goals of that project, who is working in it, and any other important details you may find.  
  
# Introduction  
Describe here the introduction of your problem. Consider this as a shortened version of your paper, where you will briefly discuss in 3-4 paragraphs what is the issue/gap in literature, and how the data you collected will help answer this gap.  

Aflatoxin contamination in stored peanuts poses a serious threat to both food safety and economic sustainability in the agricultural sector. These toxic metabolites, primarily produced by Aspergillus flavus, thrive under specific environmental conditions—namely high humidity and temperature. Traditional storage systems often fail to maintain these parameters within safe limits, especially in bulk conditions, resulting in product degradation and health hazards.
While previous studies have explored general storage recommendations and basic environmental controls, there remains a significant gap in understanding the dynamic interaction of airflow, relative humidity, and temperature in large-scale peanut storage units such as metal columns or breathable tote bags. More importantly, there is limited application of high-resolution Computational Fluid Dynamics (CFD) modeling validated by real-world experimental data in this context. This restricts our ability to predict and manage localized microclimates that may contribute to aflatoxin proliferation.
To address this gap, we developed a 3D CFD model and collected experimental data on pressure, airflow velocity, temperature, and humidity at multiple points inside a peanut-filled column. The dataset includes peanuts and varying environmental conditions, allowing for statistical and physical analysis of these interacting parameters. By applying ANOVA and other statistical techniques, we aim to identify the most influential factors on airflow resistance and environmental control.
This research bridges the experimental and simulation domains, contributing validated data that can inform future designs of storage units and environmental controls. Ultimately, the findings will support better post-harvest management practices to reduce aflatoxin risk and maintain peanut quality during storage and transport.

![Test Chamber](../data/4.jpg){fig-align="center" width="50%"}

# Hypothesis and objectives  
Describe here your hypothesis, followed by your objectives. Make sure your hypothesis are testable and bold, and objectives are clear.  

**Hypothesis:** The interaction between temperature and relative humidity will reduce the internal microclimate of peanut storage units which is determined by the pressure distribution in the storage units, contributing to conditions that may favor aflatoxin contamination.

**Objectives:** To assess the individual and interactive effects of temperature and relative humidity on the internal climate of peanut storage units using experimental and statistical approaches (e.g., ANOVA).

# Material and Methods  
Describe here your overall material and methods as it pertains to the analysis you will conduct, including study description, site/setup description, what equipment was used, etc. just like you would in a paper. Make sure to clearly explain what was measured and how.

**Study Overview:** 
This study was designed to investigate the influence of temperature and relative humidity on airflow resistance and pressure distribution in a peanut storage system. A combination of experimental measurements and statistical analysis was employed to quantify how environmental variables affect the internal conditions of shelled peanut storage, particularly focusing on airflow dynamics and pressure variations across vertical levels within the column.

**Experimental Site and Setup:**
The experimental setup consisted of a vertically oriented metal storage column with a total height of 54 inches (1.3716 meters), of which 48 inches (1.2192 meters) was filled with shelled peanuts. The column had a diameter of 14 inches (0.3556 meters) and included a perforated sheet at the base to facilitate uniform airflow distribution.
Ambient air was introduced from the bottom of the column using a controlled airflow system at a fixed velocity of 0.1 m/s. The airflow was allowed to pass vertically through the peanut mass, simulating real storage ventilation conditions. Peanuts were conditioned to different environmental conditions to represent various storage scenarios.
![Test Chamber](../data/3.jpg){fig-align="center" width="100%"}

**Measurement and Instrumentation:**
Pressure was measured at five vertical levels (Taps 1 through 5), with Tap 1 located just above the perforated sheet (at the base), and Tap 5 located near the top of the peanut mass. Static pressure sensors were used to collect time-series data under each moisture condition. Air temperature and relative humidity were also recorded at each tap using calibrated digital sensors.
The physical properties of the peanuts—such as bulk density (704.86 kg/m³), true density (997.36 kg/m³), and porosity (36.91%) were determined experimentally prior to the airflow tests to ensure accurate interpretation of airflow resistance.

![](../data/2.jpg){fig-align="center" width="50%"} 



## Study design  
Clearly describe your study design here, including treatment design (which factors and levels, the hierarchy among them, etc.), and your experimental design (number of reps/blocks, how was randomization performed, etc.), as we talked about in class.  

This study was conducted to evaluate the effects of relative humidity and temperature on pressure distribution within a peanut-filled storage column. A factorial treatment design was employed, consisting of two fixed factors:
   . Relative Humidity (RH): 7 levels (50%, 55%, 60%, 65%, 70%, 75%, 80%)
   . Temperature (T): 3 levels (5°C, 10°C, 15°C)
This results in a total of 21 unique treatment combinations (7 humidity × 3 temperature). Each treatment was replicated 5 times, resulting in 105 total observations.

**Experimental Design and Randomization:**
A completely randomized design (CRD) was used for this experiment. Each of the 21 treatment combinations was randomly assigned across five replicates to ensure that any variation due to environmental or experimental conditions was minimized and that the effects measured could be attributed confidently to the treatment variables.
Randomization was performed using R software to assign treatment combinations to replicate runs. This random allocation helps to prevent bias and maintains the independence of observations across replicates.

**Response Variable:**
The primary response variable measured was static pressure (Pa), recorded at multiple points in the storage column using calibrated pressure sensors. The pressure values across all treatments ranged from –29.81 Pa to 102.76 Pa, capturing both pressure drop and buildup within the system under different temperature and humidity conditions.

## Statistical analysis  
Describe here your statistical analysis, including what type of ANOVA model you ran (based on the design above), what was your response variable, what were your explanatory variables and how were the explanatory variables treated (random or fixed). Provide your alpha level. Explain which function from which package you used to analyze this data. Explain how you checked linear model assumptions and whether or not they were met. Overall, make sure you explain in sufficient detail that, if given your data, a knowledgeable person would be able to reproduce your analysis exactly.  

# Results  
Here is where the coding is going to happen, and it will be completely up to you. Include under this section as many sub-sections (using ##) and as many chunks needed to create the analytical workflow for your analysis, starting at loading packages and data, wrangling, EDA, modeling, assumptions checking, ANOVA table, means, pairwise comparisons, and final publication-quality plot.  

Make sure to run a model that reflects your study design. Even if your study design does not include one of the designs covered in class, you are still expected to run the most appropriate model. If you need help for references, let me know.  

Before each chunk, describe the steps being performed in that chunk. For example, "Here I will load the data".  

If a chunk produces output, like printing a data frame, statistical summary, a plot, ANOVA table, etc., make sure to write text interpreting what you see and how you can/will use that information to move forward to the next steps in the workflow.  




# Team work in GitHub  
Whether you are working with your future-self or as duos, make sure to stage, commit, and push after finishing each of the sub-sections above. When committing, write commit messages that are short and descriptive (e.g., finished wrangling).  

If you are working in duos, make sure to split the workload. I will check your collaborative work through the commit history, and if one student has contributed significantly more than the other, than that will impact grades.  

**Tip 1**: to avoid merge conflicts, make sure to **pull** first, and then start working locally. That will ensure that any changes made by your partner will be "downloaded" before you make changes to the files locally.  

**Tip 2**: make use of the Issues on this repository to set up to-do lists and assign tasks to different people. You can also use each issue/task to discuss how things should be run and get to an agreement.  

# Submitting your work  
Once you have developed all the code and answers, make sure to Render this quarto file.  

**Notes on rendering**:  

- Make sure to render your work and inspect how the final html look like.  
- If it does not look professional for whatever reason, then fix the issue, re-render it, recheck.  
- Only send me your work once your html file looks professional.  
- Some potential issues you may encounter and how to fix them:   
  - Some times your code may be creating a table output that is waaay to long and cumbersome to scroll through when rendered. If this is the case, make it more professional looking by using the `head()` function to only print the first handful of rows (instead of thousands of rows).  
  
  - **DO NOT** delete the file's heading levels (# and ##). They set up the proper heading 1 and 2 levels, and I use them to guide my grading.  
  
  - If a given chunk is also outputting warnings or messages, inhibit this behavior by changing the chunk options `message` and `warning` to `FALSE`.  
  
  - If, after rendered, 2 lines of text are connected and you wish to "break line" between them, add 2 extra spaces after the first one.  

After rendering, an .html file will be created on your `code` folder.  

Rename this file to `LASTNAME1-LASTNAME2_finalproject.html`.    
For ex., `Bastos-Mendes_finalproject.html`.

Submit the html file on eLC by **April 30th** 11:59 pm.    













  

  

